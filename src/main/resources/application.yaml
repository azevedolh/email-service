spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
  datasource:
    url: ${DB_URL:jdbc:h2:mem:emaildb;DB_CLOSE_DELAY=-1}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    database: H2
    hibernate:
      ddl-auto: create
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:dory.srvs.cloudkafka.com:9094}
      group-id: ${KAFKA_GROUP_ID:hvzlydbz-default-group}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        enable.auto.commit: true  # Whether to automatically commit offsets after consuming messages
        auto.offset.reset: latest
        enable.idempotence: false
        security.protocol: SASL_SSL
        sasl.mechanism: SCRAM-SHA-512
        sasl.jaas.config: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USERNAME}" password="${KAFKA_PASSWORD}";'
        # Add other consumer properties as needed (e.g., session.timeout, max.poll.records)

server:
  port: 8083
  servlet:
    context-path: /email-service

customer:
  service:
    url: ${CUSTOMER_SERVICE_URL:http://localhost:8080/customer-service/api/v1/customers}

email:
  from: ${EMAIL_FROM:azevedolh35@gmail.com}